%{help=fixcodes}%{-}
###  %bfixcodes%b
   Questo √® per l'uso in situazioni in cui il bot si confonde sul tipo
   di connessione che hai con esso. Ad esempio, tu /CTCP CHAT e il bot
   pensa che ti stai connettendo tramite telnet e vedi il testo visualizzato
   come "L'ora locale √® [1m17:17[0m" invece di 'L'ora locale √® 17:17'.
   Usalo per attivare o disattivare/cambiare in telnet la modalit√† display.
%{help=ignores}%{+m}
###  %bignores%b [caratteri-jolly]
   Mostra un elenco di maschere host da cui il bot sta attualmente ignorando
   i messaggi, avvisi, ecc. Esistono due tipi di ignore: permanente e
   temporaneo. Gli ignore permanenti non scadono mai. Devi usare 
   %b'.- ignore'%b per rimuoverli.

   Ecco un esempio di ignore permanente:
      [  1] *!*@217.156.44.184 (perm)
            Wcc: vai via
            Started 523 days ago

   Il numero (1) pu√≤ essere utilizzato per fare riferimento all'ignore se si
   desidera rimuoverlo (vedi %b'.help -ignore '%b). Il prossimo √® l'effettiva
   maschera host ignorata. Il '(perm)' significa che l'ignore √® 'permanente':
   cio√®, non scade mai. La seconda riga della voce da ignorare √® il commento
   ('vai via') e chi ha impostato il divieto (Wcc). L'ultima riga mostra
   quando ignore √® stato aggiunto.

   Qui un esempio di ignore temporaneo:
      [ 10] blah!blah@blah.cc (scade in 1 giorno)
            Wcc: richiesto
            Started 18:02

   Qui, al posto di 'perm' tra parentesi accanto alla maschera host vedi il
   tempo di scadenza. Nell'esempio scadr√† automaticamente tra un giorno.

   Se usi %b'.ignores <caratteri-jolly>'%b, elencher√† tutti gli ignore che
   corrispondono alla tua ricerca.

Vedi anche: +ignore, -ignore
%{help=link}%{+t}
###  %blink%b [via-bot] <bot-da-collegare>
   Tenta di collegare un bot alla botnet. Il bot locale deve avere un record
   per il bot remoto in modo che possa essere collegato (vedi %b'.help +bot'%b).
   Se non imposti una password su entrambi i bot, verr√† automaticamente
   negoziata la prima volta che si collegano. Se fai una specifica richiesta
   'via-bot', verr√† inviata una richiesta a quel bot per collegarsi al
   'bot-da-collegare'.

Vedi anche: unlink, +bot, -bot
%{help=loadmod}%{+n}
###  %bloadmod%b <modulo>
   Carica un modulo specifico.

Vedi anche: modules, module, unloadmod
%{help=match}%{+o|o}
###  %bmatch%b <attr> [canale] [[inizio] limite]
   Questo mostra tutti gli utenti registrati nel bot aventi gli
   attributi richiesti.

   "attr" ha la forma:  <+/-><globale>[&/|<canale>[&/|<bot>]]

   Se si specifica "&" come separatore, verr√† eseguita una
   corrispondenza di stile AND.

   Per esempio:
      .match +p&o

   Questo abbiner√† tutti gli utenti sia con il flag globale "p" che con le flag
   di canale "o" sul canale corrente della console.

   Se si specifica "|" come separatore verr√† eseguita una corrispondenza di
   stile OR.

   Per esempio:
      .match +p|o

   Questo abbiner√† tutti gli utenti con il flag globale "p" o la flag di
   canale "o" sul canale corrente della console. Se specifichi un canale, sar√†
   utilizzato al posto del canale della console corrente.

   Per esempio:
      .match +p|o #eggdrop

   Questo abbiner√† tutti gli utenti con la flag globale "p" o la flag di canale
   "o" sul canale #eggdrop. Puoi anche abbinare flag dei bot.

   Per esempio:
      .match +o|o|h

   Questo abbiner√† tutti i bot con il flag globale "o", o la flag di canale
   "o" sul canale della console corrente o la botflag "h". Puoi anche limitare
   il numero di risultati totali restituiti specificando un limite alla fine del
   comando. √à inoltre possibile specificare un punto di partenza.

   Per esempio:
      .match +p&o #eggdrop 16 25

   Questo mostra i risultati da 16 a 25 degli utenti con la flag globale "p"
   o la flag di canale "o" su #eggdrop.

###  %bmatch%b <stringa-con-caratteri-jolly> [[inizio] limite]
   Visualizza tutti i record utente in cui si trova il nome dell'utente o
   le maschere host che corrispondono alla stringa di caratteri jolly specificata.
   Puoi anche limitare il numero dei risultati totali restituiti specificando un
   limite alla fine del comando. Pu√≤ anche essere specificato il punto di partenza.

   Pe esempio:
     .match *.edu 16 25

   Questo mostra i risultati da 16 a 25 di qualsiasi utente con la maschera host
   che finisce con ".edu".
%{help=me}%{-}
###  %bme%b <testo>
   Esegue un'azione nella partyline. Ci√≤ apparir√† cos√¨ "* Wcc sta lasciando", ecc.
%{help=module}%{+n}
###  %bmodule%b [nome-del-modulo]
   Riporta i nomi dei moduli attualmente caricati, comprese le dipendenze e
   un rapporto sullo stato. Se specifichi un nome di modulo, saranno mostrate
   solo le informazioni su quel modulo.

Vedi anche: modules, loadmod, unloadmod
%{help=modules}%{+n}
###  %bmodules%b [nome-del-bot]
   Visualizza un elenco dei moduli attualmente caricati. Se viene specificato
   il nome di un bot verranno invece visualizzati i moduli attualmente
   caricati su quel bot.

Vedi anche: module, loadmod, unloadmod
%{help=motd}%{-}
###  %bmotd%b [nome-del-bot]
   Questo rivisualizza il "Message Of The Day", che hai gi√† visto quando sei
   entrato in partyline. Se si specifica il nome di un bot remoto, verr√†
   visualizzato il motd del suddetto bot.
%{help=newpass}%{-}
###  %bnewpass%b <password>
   Cambia la tua password sul bot. Questo √® simile al comando '/msg <bot> pass',
   tranne per il fatto che non √® necessario specificare la vecchia password.
%{+t}

Vedi anche: chpass
%{help=handle}%{-}
###  %bhandle%b <nuovo-nome>
   Cambia il tuo nome nel bot. Questo √® il nome (nickname) con cui il bot ti
   riconoscer√† da ora in avanti. Viene utilizzato per accedere al bot, e per
   il comando /msg IDENT, etc.

Vedi anche: newpass%{+t}, chhandle, chpass
%{help=note}%{-}
###  %bnote%b <nickname[@bot]> <message>
   Sends a private note to a user on the partyline. If that user is currently
   logged in and not marked as away, the message will be received immediately.
   Otherwise, it will be stored and displayed the next time that user joins the
   partyline. To send a note to someone on a different bot, add "nick@bot" to
   the nickname.

Vedi anche: whom, notes
%{help=page}%{-}
###  %bpage%b <number/off>
   This allows you to slow down the number of lines the bot sends you at once
   via the partyline. When enabled, any commands that send greater than the
   specified number of lines will stop when that number is reached and wait for
   you to type another command (or press enter) to continue. If you have too
   many pending lines, you may be booted off the bot.
%{help=quit}%{-}
###  %bquit%b [comment]
   This disconnects you from the partyline. If you specify a comment, it will
   be displayed to other partyline users as you leave.
%{help=rehash}%{+m}
###  %brehash%b
   Reloads the bot's config file, which resets all changes made via the
   %b'.set'%b command and reloads any Tcl scripts your config loads. It also
   saves and reloads the user file from disk, just to give it some exercise.

Vedi anche: save, reload, restart%{+n}, rehelp, relang
%{help=rehelp}%{+n}
###  %brehelp%b
   This command forces the bot to recheck all of its help files for changes.

Vedi anche: save, reload, restart, relang
%{help=relay}%{+o}
###  %brelay%b <botname>
   Relays you via telnet to another bot, whether or not it is currently linked.
   The local bot must, however, have a bot record for the bot you wish to
   relay to. Typing .quit or "*bye*" on a line by itself will end the relay.

Vedi anche: bots%{+t}, +bot, -bot
%{help=reload}%{+m|m}
###  %breload%b
   Reloads the bot's user file, discarding any changes made since the last
   %b'.save'%b command or hourly user file save. Sharebots should probably
   never do this.

Vedi anche: save%{+m}, rehash
%{help=traffic}%{+m|m}
###  %btraffic%b
   Shows total and daily net traffic stats since the last %b'.restart'%b.
   Stats groups are IRC, Botnet, Partyline, Transfer.mod and Misc.
%{+m}

Vedi anche: restart
%{help=whoami}%{-}
###  %bwhoami%b
   Shows your current handle and to what bot you are connected.

Vedi anche: whom
%{help=restart}%{+m}
###  %brestart%b
   Restarts the Tcl interpreter, wipes all timers, reloads all modules, and
   reloads the config file for the bot (which resets any changes made via the
   %b'.set'%b command and reloads any Tcl scripts your config loads). As with
   the %b'.rehash'%b command, it also saves and reloads the user file from disk.

Vedi anche: rehash, reload, save
%{help=save}%{+m|m}
###  %bsave%b
   This makes the bot write its entire userfile to disk. This is useful if you
   think the bot is about to crash or something, since the user file is only
   written to disk about once an hour.

Vedi anche: reload, rehash, backup
%{help=simul}%{+n}
###  %bsimul%b <handle> <text>
   This allows you to simulate the specified handle typing the given text.

   For example:
      .simul dweeb .quit

   This would appear just as if "dweeb" typed ".quit". This command will not
   work unless eggdrop has simul enabled in the config file. Please use this
   command ethically.
%{help=strip}%{-}
###  %bstrip%b [modes]
   Allows you to remove embedded 'attribute' codes your partyline output. Valid
   options are:
      %bc%b - remove all color codes
      %bb%b - remove all boldface codes
      %br%b - remove all reverse video codes
      %bu%b - remove all underline codes
      %ba%b - remove all ANSI codes
      %bg%b - remove all ctrl-g (bell) codes
      %bo%b - remove all ordinary codes (ctrl+o, terminates bold/color/..)
      %bi%b - remove all italics codes
      %b*%b - remove all of the above

   The mode can also be a modifier like '+c' or '-bu' or '+ru-c'. If
   you omit modes, it will show your current setting.

Vedi anche: fixcodes
%{+m}

###  %bstrip%b <user> [modes]
   Set the strip level of another user. A master can't set their own strip
   flags without prefixing the modes with a '+' or '-'.


%{help=su}%{-}
###  %bsu%b <user>
   Lets you assume the identity of another user. If you are a global owner,
   this does not require a password. Otherwise, you will be asked for the
   user's password. %b.quit%b returns you to your original handle.
%{help=trace}%{+t}
###  %btrace%b <bot>
   Sends out a trace signal to another bot. If/when the trace signal returns,
   (and it should!) you will get an output that looks something like this:
      Trace result -> Valis:Stonewall:NoBoty:SomeBoty

   This is a list of the bots connected between you and the destination bot.
   It should also return the time in seconds taken for the trace to occur.

Vedi anche: bots, bottree, vbottree
%{help=unlink}%{+t}
###  %bunlink%b <bot/*>
   This disconnects the specified bot from the botnet (assuming it was linked
   in the first place). Some bots (sharebots in particular) might not allow you
   to unlink them. If "*" is specified as the parameter, all bots will be
   unlinked.

Vedi anche: link, +bot, -bot, bots, bottree
%{help=unloadmod}%{+n}
###  %bunloadmod%b <module>
   Unloads the specified module.

Vedi anche: modules, module, loadmod
%{help=whom}%{-}
###  %bwhom%b [channel/*]
   Displays a list of users on the current partyline channel.

   For example:
      [23:12] #Wcc# whom
       Nick        Bot        Host
      ----------   ---------  --------------------
      *Wcc         Anakha     telnet@xxx.atlaga.adelphia.net [idle 8m]
      *Blah        Anakha     telnet@xxx.atlaga.adelphia.net
      Total users: 2

   Each user's nickname will be listed in the first column, preceded by a "*"
   if they are a bot owner, "+" if they are a master, "%%" if they are a botnet
   master, or "@" if they are an op. In the next column, the bot the user is
   connected to will be displayed. In the third column, the host is shown. If
   the user is away, the away message will be shown. Likewise, if they are
   idle, their idle time will be displayed.

   To see what users are on a different channel, you may specify a channel
   number/name. If you specify "*" as the channel, all users on all botnet
   channels will be shown.

Vedi anche: who, bots, chat
%{help=who}%{-}
###  %bwho%b [bot]
   Displays a list of users on the local bot.

   For example:
      [23:21] #Wcc# who
      Party line members:  (* = owner, + = master, @ = op)
      *Wcc       telnet@xxx.atlaga.adelphia.net (idle 17m)
      *Wcc       telnet@xxx.atlaga.adelphia.net
      Bots connected:
      -> wortel (05 Dec 16:32) eggdrop v1.6.15 <efnet>

   The first section is people on your current channel (the party line, if you
   haven't changed channels) who are on the bot. A '*' will precede the handle
   if they are a bot owner, "+" if they are a master, "%%" if they are a botnet
   master, or "@" if they are an op. The user's nickname, hostname, and
   possibly an idle time and/or away message will be displayed.%{+n} Owners
   will also see the user's dcc idx.%{-}

   The next section is bots directly linked to the current bot. The arrow
   indicates which bot initiated the connection. The right arrow means this bot
   connected to wortel. A left arrow means the remote bot linked to this bot. A
   '+' next to the arrow indicates that the bot is sharing userfiles with us.
   The connection time (05 Dec 16:32) and bot version are also shown, as well
   as what is specified under "network" in the config file.%{+n} Owners will
   also see the bot's dcc idx.%{-}

   The final section (not shown in example above) is a list of users on the
   local bot who are not on your channel. This will be omitted if there are no
   users on other channels. If you specify the name of a remote bot, for
   example %b'.who valis'%b, the who request will be sent to that bot instead.
   The remote bot must be linked to the botnet.
%{+m}

   Masters may also see "(con <flags>)" after a user's entry, which shows the
   user's console flags/modes (see %b'.help console'%b).

   In the final section (users that aren't on the current channel), masters
   will see the actual channels other users are on. Also, people in the
   filesystem will be listed (as being in channel "files") if the filesys
   module is loaded. A '+' next to the nickname here means the user has
   access to return to the party line.
%{-}

Vedi anche: whom
%{help=whois}%{+o|o}
###  whois <nickname>
   Shows you stored information about a user record. Five headings are
   displayed:
      %bHANDLE%b - the handle (nickname) of the user
      %bPASS%b   - "yes" if she has a password set; "no" otherwise
      %bNOTES%b  - number of stored notes waiting for the user
      %bFLAGS%b  - the list of flags for this user (see below)
      %bLAST%b   - the time or date that the user was last on the channel

   Valid global flags:
      %ba%b - autoop (user is opped automatically upon joining any channel)
      %bb%b - bot (user is a bot)
      %bc%b - common (see %b'.help common'%b)
      %bd%b - deop (user cannot gain ops in any channel)
      %be%b - nethack-exempt (user is exempted from stopnethack protection)
      %bf%b - friend (user is not punished for flooding, etc on any channel)
      %bg%b - autovoice (user is voiced automatically upon joining any channel)
      %bh%b - highlight (use bold text in help/text files)
      %bj%b - janitor (user is a file-area master)
      %bk%b - autokick (user is kicked and banned automatically)
      %bl%b - halfop (user has halfop access to all of the bot's channels)
      %bm%b - master (user has access to almost every feature of the bot)
      %bn%b - owner (user has absolute control over the bot)
      %bo%b - op (user has op access to all of the bot's channels)
      %bp%b - party-line (user has access to the partyline)
      %bq%b - quiet (user cannot gain voice on any channel)
      %br%b - dehalfop (user cannot gain halfops on any channel)
      %bt%b - botnet master (user has access to features related to the botnet)
      %bu%b - unshared (user's user record is not sent to other bots)
      %bv%b - voice (user gets +v automatically on +autovoice channels)
      %bw%b - wasop-test (needs wasop test for +stopnethack procedure)
      %bx%b - xfer (user has filesystem access)
      %by%b - autohalfop (user is auto-halfopped upon joining any channel)
      %bz%b - washalfop-test (needs washalfop test for +stopnethack procedure)

      There are also 26 user-defined global flags (A-Z).

   Users can also have flags specific to a channel:

      %ba%b - autoop (user is opped automatically upon joining the channel)
      %bd%b - deop (user cannot gain ops on the channel)
      %be%b - nethack-exempt (user is exempted from stopnethack protection)
      %bf%b - friend (user is not punished for flooding, etc)
      %bg%b - autovoice (user is voiced automatically upon joining the channel)
      %bk%b - autokick (user is kicked and banned automatically)
      %bl%b - halfop (user has halfop access to the channel)
      %bm%b - master (user is a channel master)
      %bn%b - owner (user is a channel owner)
      %bo%b - op (user has op access to the channel)
      %bq%b - quiet (user cannot gain voice on the channel)
      %br%b - dehalfop (user cannot gain halfops on the channel)
      %bv%b - voice (user gets +v automatically if the channel is +autovoice)
      %bw%b - wasop-test (needs wasop test for +stopnethack procedure)
      %by%b - autohalfop (user is auto-halfopped upon joining the channel)
      %bz%b - washalfop-test (needs washalfop test for +stopnethack procedure)

      There are also 26 user-defined channel flags (A-Z).

   Hostmasks for the user are displayed on the following lines. If the user is
   a bot, there will be a line below which says "ADDRESS:" and gives the bot's
   telnet address. Some user entries may have "EMAIL:" and "INFO:" entries too.
   There may be additional information displayed depending on the modules
   loaded, such as filesys and console.

   For bots, there are additional flags seen under the "BOTATTR:" section.
   Valid botflags include:
      %ba%b - alternate (bot is autolinked if no hub bots can be linked)
      %bb%b - ban sharing (pasv bot can share bans with aggr bot)
      %bc%b - channel sharing (pasv bot can share chan changes with aggr bot)
      %bd%b - share aggressively (SEND userfile to a passive bot), none sharing (pasv bot to aggr bot)
      %be%b - exempt sharing (pasv bot can share exempts with aggr bot)
      %bg%b - global share (bot is sharing all channels)
      %bh%b - hub (bot is autolinked at highest priority)
      %bi%b - isolate (isolate the party line across a botlink)
      %bj%b - invite sharing (pasv bot can share invites with aggr bot)
      %bl%b - leaf (bot is not allowed to link other bots onto the botnet)
      %bn%b - ignore sharing (pasv bot can share ignores with aggr bot)
      %bp%b - share passively (ACCEPT userfile from an aggressive bot)
      %br%b - reject (bot will not be allowed to link to the botnet)
      %bs%b - share aggressively (SEND userfile to a passive bot), all sharing (pasv bot to aggr bot)
      %bu%b - user sharing (pasv bot can share user changes with aggr bot)

      There are also 10 user-defined bot flags (0-9). Bots may also have +s
      (share) settings for individual channels.
%{+m}

   Masters: if the user has a comment, you will see it under "COMMENT:".%{-}

Vedi anche: match, who, whom%{+m|m}, chattr%{+t}, botattr
%{help=status}%{+m|m}
###  %bstatus%b
###  %bstatus all%b
   Displays a condensed block of status information about the bot.
   is running. For example:
      [01:15] #Wcc# status
      I am Anakha, running eggdrop v1.8.3:  171 users (mem: 315k)
      Online for 14 days, 02:50  (background)  CPU 71:29  cache hit 40.3%
      Admin: Wcc
      Config file: eggdrop.conf
      OS: FreeBSD 4.8-RELEASE-p1
      Process ID: 5109 (parent 3489)
      Tcl library: /usr/local/lib/tcl8.4
      Tcl version: 8.6.8 (header version 8.6.8)
      Tcl is threaded.
      TLS support is enabled.
      TLS library: OpenSSL 1.1.0g 2 Nov 2017
      IPv6 support is enabled.
      Socket table: 20/100
      Memory table: 3182/250000 (1.3% full)
      Memory fault: only accounting for 106336/109829 (96.8%)
      Memory table itself occupies an additional 9765K static
      Loaded module information:
          Channels: #|DAWG|Net, #|DAWG|Tcl
          Online as: D|Anakha!wcc@cia.nu (|DAWG|Anakha - |DAWG|Net)
          Server irc.inet.tele.dk:6667 (connected for 11 days)
          #|DAWG|Net:  6 members, enforcing "+istn" (lurking)
          #|DAWG|Tcl: 42 members, enforcing "+tn" (lurking)


   The first lines contain information such as the bot's name, what version
   of Eggdrop it's running, the number of users the bot has records of, and 
   the amount of memory being used by the userfile. Following that is
   information such as the uptime of the bot, CPU time, and what compile
   options, if any, the bot was configured with, along with the bot's admin and
   and filename of the running config file. The subsequent lines show
   information such as the operating system the bot is running on, information
   on the Tcl libraries used to compile the Eggdrop, and if SSL and IPv6
   support are enabled. If debug mode is enabled, additional info may be shown. 
   Sharing information will also be shown if it's being used.

   Select information from modules will be displayed after the core
   information. If you use %b'.status all'%b instead, you will see all status
   information available from loaded modules.

Vedi anche: channel%{+n}, set%{+m}, debug
%{help=uptime}%{+m|m}
###  %buptime%b
   Displays the bot's current uptime.

Vedi anche: status
%{help=vbottree}%{-}
###  %bvbottree%b
   Shows a tree-format diagram of the bots and their Eggdrop version
   currently on the botnet. If 2 bots are sharing, a + will be indicated, or
   a ? if nothing is known.

Vedi anche: bots, botinfo, bottree
%{help=fprint}%{-}
### %bfprint <+/SHA1 fingerprint>%b
   Adds an SSL certificate fingerprint to your user account. This allows you
   to authenticate to Eggdrop with a certificate instead of a password. You
   can log in to the partyline using SSL and use %b'.fprint +'%b to add the
   current certificate, or use %b'.fprint <SHA1 fingerprint>'%b to manually
   add a certificate fingerprint.

%{help=chfinger}%{-}
### %bchfinger <handle> [fingerprint]%b
   Changes the SSL certificate fingerprint associated with your user account.
   Not specifying a value for 'fingerprint' will remove an existing certificate
   associated with your user account.
