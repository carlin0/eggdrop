%{help=+bot}%{+t}
###  %b+bot%b <nome> [indirizzo [[+]bot port[/[+]user port]]] [host]
   Crea una registrazione utente per un nuovo bot col nome fornito. Se nessuna
   maschera host viene specificata, il bot tenterà di aggiungere automaticamente
   un host dal canale. L'indirizzo del bot verrà utilizzato per il collegamento.
   Se il bot ha una porta separata per i bot e gli utenti devono essere
   separate da una barra (/). Il prefisso della porta con un segno più (+)
   consentirà solo l'utilizzo del collegamento protetto (SSL).

Vedi anche: -bot
%{help=+host}%{+t|m}
###  %b+host%b [nome] <hostmask>
   Aggiunge una maschera host all'utente. Le maschere host vengono utilizzate
   per identificare gli utenti da gestire su IRC. Se non viene specificato un
   nome, verrà aggiunta come maschera host la TUA registrazione utente.

Vedi anche: -host
%{help=+ignore}%{+m}
###  %b+ignore%b <hostmask> [%%<XyXdXhXm>] [commento]
   Aggiunge un ignore all'elenco degli elementi ignorati archiviati nel bot,
   con facoltativo commento e il tempo di durata. Questo ignore viene
   memorizzato con il tuo nome come creatore. Il tempo di durata deve essere
   espresso in anni, giorni, ore e / o minuti

Vedi anche: -ignore, ignores
%{help=+user}%{+m}
###  %b+user%b <nome> [hostmask]
   Crea un nuovo utente col nome fornito. Il nuovo utente sarà senza flag
   e password, una maschera host può essere aggiunta durante la creazione.

Vedi anche: -user, +host, -host
%{help=-bot}%{+t}
###  %b-bot%b <bot>
   È esattamente lo stesso di %b'.-user'%b (rimuove l'utente registrato).

Vedi anche: +bot, +user, -user
%{help=-host}%{-}
###  %b-host%b <hostmask>
   Rimuove un host al tuo utente.
%{+m|m}

###  %b-host%b <nome> <hostmask>
   Rimuove un host da un determinato utente.
%{-}

Vedi anche: +host
%{help=-ignore}%{+m}
###  %b-ignore%b <hostmask/numeror>
   Rimuove un ignore specifico dall'elenco degli host ignorati archiviati
   nel bot. Si può anche usare il numero mostrato dal comando 'ignores'.

Vedi anche: +ignore, ignores
%{help=-user}%{+m}
###  %b-user%b <nome>
   Rimuove uno specifico utente registrato.

Vedi anche: +user, +bot, -bot
%{help=addlog}%{+to|o}
###  %baddlog%b <testo>
   Aggiunge il tuo commento al file di registro del bot. I bot master possono
   rivedere il registro e apparirà il tuo commento (con il tuo nome allegato).
   Questo è utile per spiegare attività strane.
%{help=away}%{-}
###  %baway%b [messaggio-di-assenza]
   Ti segna come "away" (assente) in party line. Il tuo messaggio di assenza 
   verrà visualizzato nell'elenco %b'.who'%b , e verrà mostrato a chiunque
   tenti di inviarti una nota. Le tue note verranno memorizzate, e le
   visualizzerai appena tornerai dall'assenza. Se scrivi qualcosa nella party
   line il tuo stato di "away" sarà rimosso automaticamente, oppure puoi
   digitare %b'.back'%b o %b'.away'%b tu stesso.

Vedi anche: back
%{help=back}%{-}
###  %bback%b
   Questo segna che non sei più assente in party line.

Vedi anche: away
%{help=backup}%{+m|m}
###  %bbackup%b
   Questo fa sì che il bot scriva una copia dell'intero elenco utenti. Se il
   modulo dei canali è caricato, scriverà anche una copia del file dei canali.
   Questo è utile se hai la necessità di eseguire il backup dei file utente
   e del canale.

Vedi anche: reload, rehash, save
%{help=banner}%{+t}
###  %bbanner%b <testo>
   Visualizza un messaggio a tutti coloro che attualmente sono in party line
   o nell'area file area. Questo è utile per annunciare che il bot sarà 
   disattivato, riavviato, etc.
%{help=binds}%{+m}
###  %bbinds%b [type/match] [all]
   Mostra i collegamenti Tcl in vigore, in un elenco simile a questo:
      Command bindings:
        TYPE FLAGS    COMMAND              HITS BINDING (TCL)
        msg  -|-      rose                    0 msg_rose
        msg  -|-      go                      0 msg_go
        dcc  m|-      bind                    0 cmd_bind
        pub  -|-      gross                   0 pub_gross
   I campi dovrebbero essere autoesplicativi, ad eccezione di HITS, che
   registra il numero di volte che è stato chiamato il binding. In caso
   contrario, vai a leggere il file %b'doc/tcl-commands.doc'%b per l'aiuto
   sul comando Tcl bind. Nota che ora vengono mostrati i comandi incorporati.
   È inoltre possibile specificare un tipo di associazione da mostrare
   (es.%b'.binds msg '%b) oppure puoi specificare una corrispondenza con
   caratteri jolly (es.%b'.binds *seen* '%b) se vuoi restringere un po' il
   campo. I caratteri jolly corrisponderanno ai campi TYPE, COMMAND e BINDING.
   Puoi visualizzare più binding aggiungendo 'all' alla fine del comando.

Vedi anche: tcl
%{help=boot}%{+t}
###  %bboot%b <nome[@bot]> [motivo]
   Espelle un utente dalla party line e visualizza il motivo, se specificato.
   Puoi anche specificare un bot e tentare di espellere qualcuno da un altro
   bot sulla botnet, sebbene possa essere rifiutato se quel bot non consente
   espulsioni remote. Non puoi espellere un proprietario di bot.
%{help=botattr}%{+t}
###  %bbotattr%b <nome> [flags] [canale]
   Consente di visualizzare e cambiare le flag di un bot. Ad esempio per
   impostare "Fred1" +share e -hub, digita '.botattr Fred1 +s-h.'

   Indipendentemente dal fatto che tu modifichi o meno qualsiasi flag, ti
   mostrerà i flag del bot in seguito al comando dato. Per vedere un elenco
   delle flag, vedi %b'.help whois'%b.

   %bNOTA:%b Questo comando NON viene utilizzato per sostituire .chattr.
          Modifica i flag dei bot, come s, h, a, u, ecc.
   %bNOTA:%b Non puoi usare questo comando su un bot che è collegato
          direttamente al tuo in quel momento.

Vedi anche: whois, chattr
%{help=botinfo}%{-}
###  %bbotinfo%b
   Richiede informazioni da ogni bot attualmente presente sulla botnet.
   Ogni bot dovrebbe eventualmente mandare una riga contenente la sua versione,
   le impostazioni di rete, i canali e tempo di attività.

Vedi anche: bottree, vbottree, bots
%{help=bots}%{-}
###  %bbots%b
   Mostra l'elenco dei bot attualmente presenti nella botnet.

   Esempio:
      Bots: cEvin, ruthie, Killa1

   Non vi è alcuna indicazione di quali bot siano collegati direttamente a
   quello in cui si digita il comando. Usa %b'.who'%b%{+t} o %b'.bottree'%b%{-}
   per quella informazione.

Vedi anche: bottree, vbottree, botinfo
%{help=bottree}%{-}
###  %bbottree%b
   Mostra un diagramma ad albero dei bot attualmente presenti sulla botnet.
   È solo un bel modo per avere un'idea di come i bot sono fisicamente connessi.
   Se 2 bot stanno condividendo, verrà indicato un + o un ? se non si sa nulla.

Vedi anche: bots, botinfo, vbottree
%{help=chaddr}%{+t}
###  %bchaddr%b <bot> <indirizzo> [[+]porta dei bot[/[+]porta utenti]]
   Modifica l'indirizzo di un bot. Questo è l'indirizzo a cui proverà il tuo
   bot connettersi se richiesto. Se il bot ha una porta separata per bot e
   utenti, dovrebbero essere separate da una barra (/). La porta con il prefisso
   più consentirà solo l'utilizzo del collegamento protetto (SSL).

Vedi anche: link, +bot
%{help=chat}%{-}
###  %bchat%b <on/off>
###  %bchat%b <[*]canale numero/nome>
   Changes your current channel on the partyline. When you first connect to
   the partyline, it places you on channel 0 (the main party line).

   Some channels may have assigned names if the assoc module is loaded. For
   these, you can specify the channel by name instead of channel number if
   you wish.

   %b'.chat off'%b removes you from all channels, including the main party line.
   You can still use bot commands and see the console, but you can't talk to
   anyone except via %b'.note'%b. %b'.chat on'%b returns you to the main party
   line (channel 0) if you were elsewhere.

   If you prefix the channel with a '*', you will join a local channel.

Vedi anche: console
%{help=chattr}%{+m|m}
###  %bchattr%b <nome> [flags] [canale]
   This lets you view and change the flags for a user.

   For example, to give Lamer the p and f flags:
      .chattr Lamer +pf

   To remove Denali from the global op list:
      .chattr Denali -o

   You may also do any combination of the above:
      .chattr Fred1 -m+xj-o

   You can also change the flags for Usagi on a specific channel by supplying
   the channel after the attributes:
      .chattr Usagi -m+dk-o #blah

   Changing global and channel specific flags within the same command line is
   also possible (global +f, +o #lamer):
      .chattr Bill f|o #lamer

   Whether or not you change any flags, it will show you the user's attributes
   afterwards. To get a list of all possible flags, see %b'.help whois'%b.

   %bNOTES:%b Only the owner may add or remove the 'n' (owner), 'm' (master) or
          't' (botnet master) flags. It is pointless to -n a permanent owner.
          You must remove the permanent owner in the config file.

Vedi anche: whois, botattr
%{help=chhandle}%{+t}
###  %bchhandle%b <vecchio-nome> <nuovo-nome>
   Changes the handle of a user. For example, to change the handle of user
   'gavroche' to 'jamie', you would use 'chhandle gavroche jamie'.

Vedi anche: chpass
%{help=chpass}%{+t}
###  %bchpass%b <nome> [nuovapassword]
   Changes a user's password. If you do not specify the new password, the user
   effectively no longer has a password set. A password is needed to get ops,
   join the party line, etc.

   %bNOTE:%b In previous versions, setting a password to "nopass" would clear
         a user's password -- with encrypted passwords. This no longer works!

Vedi anche: chhandle
%{help=comment}%{+m}
###  %bcomment%b <utente> <commento>
   Creates or changes the comment field for a user. The comment field can only
   be seen via 'whois' or 'match'. Non-masters cannot see the comment field.
%{help=console}%{+to|o}
###  %bconsole%b [canale] [modi]
   Changes your console level so that you will see only the types of console
   messages that you want to. Your current console channel is the channel (that
   the bot is on) from which you can view from the party line, and which
   channel-specific commands (like 'say' and 'op') take affect on.

   Valid flags are:
     %bj%b  joins, parts, quits, aways, and netsplits on the channel
     %bk%b  kicks, bans, and mode changes on the channel
     %bm%b  private msgs, notices and ctcps to the bot
     %bp%b  public text on the channel
     %bs%b  server connects, disconnects, and notices

%{+m}
   Masters only:
     %bb%b  information about bot linking and userfile sharing
     %bl%b  messages from linked bots
     %bd%b  misc debug information
     %bc%b  commands
     %bo%b  misc info, errors, etc (IMPORTANT STUFF)
     %bw%b  wallops (make sure the bot sets +w in init-server)
     %bx%b  file transfers and file-area commands

%{+n}
   Owners only (these have to be enabled in the config file via "set raw-log"):
     %bg%b  raw outgoing share traffic
     %bh%b  raw incoming share traffic
     %br%b  raw incoming server traffic
     %bt%b  raw incoming botnet traffic
     %bu%b  raw outgoing botnet traffic
     %bv%b  raw outgoing server traffic

   There are also 8 user-defined console modes ('1' through '8').

%{+o|o}
   The mode can also be a modifier like '+p' or '-jk' or '+mp-b'. If you omit
   the channel and modes, your current console channel and flags will be shown.

%{+m|m}
###  %bconsole%b <utente> [canale] [modi]
   This is used to set the console level of another user. This can even be used
   on users who normally would not be able to set their own console mode.
%{help=resetconsole}%{+to|o}
###  %bresetconsole%b
   Changes your console level to the default settings from the configfile.
%{+m|m}
###  %bresetconsole%b <utente>
   This is used to reset the console level of another user to the default
   setting from the configfile. This can even be used on users who normally
   would not be able to set their own console mode.
%{help=dccstat}%{+m}
###  %bdccstat%b
   Displays a table-format list of all "dcc" connections in use on the bot.
   Dcc stands for "Direct Client-to-client Communication", and Eggdrop expands
   this to cover every open socket. Any type of network connection to the bot
   is considered a "dcc" connection.

   The headings of the table are:
     %bIDX%b   index; the socket number of this connection (always unique)
     %bADDR%b  the ip address mask of the host the bot is connected to, if
           applicable
     %bPORT%b  the port number being used for this connection
     %bNICK%b  the handle of the user or bot, if applicable
     %bTYPE%b  the type of dcc connection (see below)
     %bINFO%b  misc information, i.e. flags for certain dcc types

   The types of connections currently possible are as follows (but more are
   being added all the time):
     %bCHAT%b  dcc-chat partyline user
     %bPASS%b  user entering dcc chat (being asked for password)
     %bSEND%b  user sending a file
     %bGET%b   sending a file to a user
     %bGETP%b  pending get (waiting for the user to acknowledge)
     %bLSTN%b  telnet listening port (in place of a hostname, it will show the
           callback procedure name, or a mask of acceptable handles)
     %bT-IN%b  incoming telnet user (being asked for handle)
     %bFILE%b  user in dcc-chat file area
     %bBOT%b   connected bot (botnet connection)
     %bBOT*%b  pending bot link (waiting for acknowledgement)
     %bRELA%b  user in relay connection to another bot
     %b>RLY%b  bot being relay'd to (one for each "RELA")
     %bCONN%b  pending telnet connection (chat, relay, bot-link, etc)
     %bNEW%b   new user via telnet (entering a handle)
     %bNEWP%b  new user via telnet (entering a password)

   In addition, 'CHAT' and 'BOT' have flags listed for each connection. Capital
   letters mean that the flag is on, and lowercase letters mean that the flag
   is off. The flags for 'CHAT' are:
     %bC%b  in file area, but allowed to return to party line
     %bP%b  party line access only
     %bT%b  telnet connection (instead of dcc chat)
     %bE%b  echo is on
     %bP%b  paging is on

   The flags for 'BOT' are:
     %bP%b  ping sent, waiting for reply
     %bU%b  user-file sharing is active
     %bC%b  local bot initiated the connection
     %bO%b  user-file offered, waiting for reply
     %bS%b  in the process of sending the user-file
     %bG%b  in the process of getting the user-file
     %bW%b  warned this bot to stop hubbing
     %bL%b  leaf-only bot (not allowed to be a hub)
     %bI%b  bot is currently in the 'linking' stage
     %bA%b  bot is being aggressively shared with

   For 'CHAT' users, the party-line channel is also listed.
%{help=debug}%{+m}
###  %bdebug%b
   Display a dump of memory allocation information, assuming the bot was
   compiled with memory debugging. It's useless to anyone but developers
   trying to find memory leaks.
%{help=echo}%{-}
###  %becho%b <on/off>
   Specifies whether you want your messages echoed back to you. If it's on,
   then when you say something on the party line, it will be displayed to you
   just like everyone else will see it. If it's off, then it won't happen.
%{help=die}%{+n}
###  %bdie%b [motivo]
   This kills the bot. The bot goes offline immediately, logging who issued
   the 'die' command. You shouldn't have to use this too often. If you specify
   a reason, it is logged, otherwise the reason is "authorized by <handle>".
